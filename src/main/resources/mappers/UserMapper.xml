<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yago.epidemic_management.model.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.yago.epidemic_management.model.pojo.User">
        <id column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id
        , username, `password`, address, email, mobile, `status`, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select user_id,
               username,
               email,
               mobile,
               `status`,
               create_time
        from epidemic_situation_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from epidemic_situation_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.yago.epidemic_management.model.pojo.User">
        insert into epidemic_situation_user (user_id, username, `password`,
                                             address, email, mobile,
                                             `status`, create_time)
        values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
                #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.yago.epidemic_management.model.pojo.User">
        insert into epidemic_situation_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yago.epidemic_management.model.pojo.User">
        update epidemic_situation_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yago.epidemic_management.model.pojo.User">
        update epidemic_situation_user
        set username    = #{username,jdbcType=VARCHAR},
            `password`  = #{password,jdbcType=VARCHAR},
            address     = #{address,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            mobile      = #{mobile,jdbcType=VARCHAR},
            `status`    = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from epidemic_situation_user
        where username=#{username,jdbcType=VARCHAR}
    </select>
    <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from epidemic_situation_user
        where mobile=#{mobile,jdbcType=VARCHAR}
    </select>
    <select id="selectLogin" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from epidemic_situation_user
        where mobile = #{mobile,jdbcType=VARCHAR}
        and password=#{password}
    </select>
    <select id="selectList" resultMap="BaseResultMap">
        select user_id,
               username,
               address,
               email,
               mobile,
               status,
               create_time
        from epidemic_situation_user
        where status!=2
    </select>
    <select id="selectAdminList" resultMap="BaseResultMap">
        select user_id,
               username,
               email,
               mobile,
               status,
               create_time,
               address
        from epidemic_situation_user
        where status = 2
    </select>
    <delete id="deleteUserByUserId" parameterType="string">
        delete
        from epidemic_situation_user
        where user_id = #{userId}
    </delete>

    <update id="batchDeleteEgressUser">
        update epidemic_situation_user
        set `status`=#{status}
        where user_id in
        <foreach collection="ids" open="(" item="id" separator="," close=")">
            #{id}
        </foreach>
        and user_id!='202204181241244850a702c3c1682432fb096a48b7a233f09'
    </update>
</mapper>
